// #ifndef - макрос препроцессора для исключения двойного включения
#ifndef HEADER_4A_H
#define HEADER_4A_H

#include <locale.h>
#include <stdio.h>
#include <malloc.h>

#define SIZE 10                // Размер таблицы
#define h 3					   // Шаг перемешивания
#define path1 ptab->space1 
#define path2 ptab->space2

typedef char *Type;            // Новый тип

typedef struct Item {
	int key1;       // Ключ элемента из 1-ого пространства ключей
	int key2;       // Ключ элемента из 2-ого пространства ключей
	char *info;     // Указатель на информацию
	int ind1;	    // Связь с элементом 1-ого пространства ключей
	int ind2;	    // Связь с элементом 2-ого пространства ключей
} Item;


typedef struct Table {      // Тип - Хеш-таблица с двумя пространствами ключей
	Item space1[SIZE];      // Оба пространства организованы по принципу перемешанной таблицы, использующей перемешивание сложением
	Item space2[SIZE];
} Table;


/**************************************************************************************************************************************************************/
/*Прототипы функций*/

/* Чет по мелочи */
void clean_stdin();							// Очистка входного потока
int getInt(int*);						    // Ввод целого числа из входного потока
Type getStr();							    // Ввод строки произвольной длины из входного потока
void input(int *, int *);					// Ввод пространств ключей
void add(Item *, int, int, Type, int, int); // Добавление элемента в пространство space1/space2 на место с индексом path
int I(int);

int dialog(const Type msgs[], int);      // Диалог

/* Диалоговые функции */
int D_Add(Table *);             // Диалоговая функция включения в таблицу нового элемента
int D_Find(Table *);            // Диалоговая функция поиска вэлемента по ключу/ключам
int D_Delete(Table *);          // Диалоговая функция удаления удаления по ключу/ключам
int D_Show(Table *);            // Диалоговая функцяи вывода всей таблицы

/* Табличные функции */
int insert(Table *, int, int, Type);        // Табличная функция включения в таблицу нового элемента
void add(Item *, int, int, Type, int, int); // Добавление элемента в пространство space1/space2 на место с индексом path
int find(Table *, int, int);                // Табличная функция поиска элемента по ключу/ключам
int delete(Table *, int, int);              // Табличная функция удаления элемента по ключу/ключам
int output(Item *);                         // Табличная функция вывода таблицы (ваааще не тавтология)

/**************************************************************************************************************************************************************/

#endif

